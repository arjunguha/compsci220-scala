Identifier,Full name,Email address,Status,Grade,Maximum Grade,Grade can be changed,Last modified (submission),Last modified (grade),Feedback comments
Participant 5211282,Daniel Barowy,dbarowy@cns.umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211327,Brendan Murphy,bemurphy@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211439,Megan Parrella,mparrell@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:46 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211288,Alvin Lai,aylai@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:22 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211354,Joshua Sherman,jjsherma@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211312,Cassian Corey,cjcorey@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211395,Stone Westray,stwestra@umass.edu,"Submitted for grading
14 hours 31 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 3:31 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211297,Arjun Guha,arjun@cs.umass.edu,"No submission
Graded
",0.00,100.00,Yes,"Thursday, April 7, 2016, 1:13 PM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211352,Hilary Caws-Elwitt,helwitt@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 3:11 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211426,Nicholas Randazzo,nrandazzo@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 9:37 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211418,Patrick Aoude,paoude@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:09 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211320,Sanghoon Lee,sandlee@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 12:15 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211430,Timothy Addai,taddai@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 1:58 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211375,Tommy Nguyen,tdnguyen@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211388,Steven Rhejohn So,sbso@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:46 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211329,Erik Jenkins,eajenkins@umass.edu,"Submitted for grading
1 day 11 hours late
Graded
",90.0,100.00,Yes,"Wednesday, April 13, 2016, 12:38 PM","Monday, April 18, 2016, 10:52 AM","This assignment was 2 day(s) late. You had already used four late days. Therefore, the grade has been reduced by 10 * 1 percentage points.Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)"
Participant 5211376,James Tran,jamestran@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 3:45 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211427,Taysiman Haque,thaque@umass.edu,"Submitted for grading
1 day 23 hours late
Graded
",100.00,100.00,Yes,"Thursday, April 14, 2016, 12:38 AM","Monday, April 18, 2016, 10:52 AM",This assignment was 2 day(s) late. You've now used 2 late days.Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211362,Andrew Sciotti,asciotti@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 12:20 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211330,Albert Xu,albertxu@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:53 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211436,Nam Thai,nhthai@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:03 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211396,Chia-Lei Lee,chialeilee@umass.edu,"Submitted for grading
1 day 20 hours late
Graded
",100.00,100.00,Yes,"Wednesday, April 13, 2016, 9:48 PM","Monday, April 18, 2016, 10:52 AM",This assignment was 2 day(s) late. You've now used 2 late days.Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211317,Winston Ho,winstonho@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:38 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211328,Jayme Gordon,jgordon@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 4:01 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211326,Linda Yeboah,lyeboah@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 9:27 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211431,Cole Powers,cmpowers@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 6:10 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211413,Thomas Blessing,tblessing@umass.edu,"Submitted for grading
3 hours 31 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 4:31 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211416,Tony Gao,zijiangao@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 5:35 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211402,Peter Davey,pdavey@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 11:23 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211400,Griffin Schroeter,gschroeter@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211372,Chang Ding Yang,changdingyan@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:45 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211387,Matthew Hinsley,mhinsley@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 11:55 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211349,Molly O'Neil,mboneil@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 3:00 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211343,Aaron Weiss,aaronweiss@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211419,Xin Liu,xliu0@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Thursday, April 7, 2016, 2:20 PM","Thursday, April 21, 2016, 7:05 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211415,Mitchell Lussier,mlussier@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 2:13 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211437,Sean Morris,scmorris@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:00 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211381,Michael Marcello,memarcello@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 12:55 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211438,Anthony Evans,acevans@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 8:59 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211309,Henry Ecker,hecker@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Thursday, April 7, 2016, 3:37 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211339,Brittany Pine,bpine@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 3:06 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211314,Seyedeh Arta Razavi,srazavi@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 6:54 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211334,Jeremy Lee,jerlee@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 11:29 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211420,Ranny Chin,rannychin@umass.edu,"Submitted for grading
2 hours late
Graded
",42.00,100.00,Yes,"Tuesday, April 12, 2016, 3:00 AM","Monday, April 18, 2016, 10:52 AM","Percentage: 42%<br>Points: 50 / 120<br><br>Details:<br><br>We can add days to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (398ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 2.days<br>    [error]                                                 ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:42:43 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can add days to a date written using our date DSL failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (376ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value jan is not a member of Int<br>    [error]       val date1 = (31 jan 2016) + 2.days<br>    [error]                       ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = (31 jan 2016) + 2.days<br>    [error]                                     ^<br>    [error] three errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 7 s, completed Apr 18, 2016 2:42:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (366ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value months is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 3.months<br>    [error]                                                 ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:42:42 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (328ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value jan is not a member of Int<br>    [error]       assert(15.jan == LocalDate.of(2016, 1, 15))<br>    [error]                 ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:7: value feb is not a member of Int<br>    [error]       assert(29.feb == LocalDate.of(2016, 2, 29))<br>    [error]                 ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:8: value mar is not a member of Int<br>    [error]       assert(2.mar == LocalDate.of(2016, 3, 2))<br>    [error]                ^<br>    [error] four errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:50:07 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (409ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value feb is not a member of Int<br>    [error]       val date1 = 28 feb 2015<br>    [error]                      ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:8: value oct is not a member of Int<br>    [error]       val date2 = 15 oct 1989<br>    [error]                      ^<br>    [error] three errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:42:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can add years to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (385ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value years is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 5.years<br>    [error]                                                 ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:42:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (368ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.lang.AssertionError: assertion failed<br>    java.lang.AssertionError: assertion failed<br>    	at scala.Predef$.assert(Predef.scala:151)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:11)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 10 s, completed Apr 18, 2016 2:42:48 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211366,Jeremy Kelleher,jeremykelleh@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Thursday, April 7, 2016, 10:11 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211346,Tristan Koopman,tkoopman@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 6:30 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211405,Jesse Arsenault,jarsenault@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 8:32 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211374,Matthew Gagnon,matgagnon@umass.edu,"Submitted for grading
1 day 14 hours late
Graded
",100.00,100.00,Yes,"Wednesday, April 13, 2016, 3:18 PM","Monday, April 18, 2016, 10:52 AM",This assignment was 2 day(s) late. You've now used 4 late days.Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211412,Kang Nam,kangnam@umass.edu,"Submitted for grading
Graded
Extension granted until: Friday, April 22, 2016, 7:00 AM
",100.00,100.00,Yes,"Thursday, April 21, 2016, 9:06 AM","Friday, April 22, 2016, 1:25 PM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211414,Kai Nakamura,knakamura@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:13 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211284,Jared Yeager,jyeager@umass.edu,"Submitted for grading
Graded
",92.00,100.00,Yes,"Friday, April 8, 2016, 8:46 PM","Monday, April 18, 2016, 10:52 AM","Percentage: 92%<br>Points: 110 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (312ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.nio.file.NoSuchFileException: test.txt<br>    java.nio.file.NoSuchFileException: test.txt<br>    	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)<br>    	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)<br>    	at java.nio.file.Files.newByteChannel(Files.java:361)<br>    	at java.nio.file.Files.newByteChannel(Files.java:407)<br>    	at java.nio.file.Files.readAllBytes(Files.java:3152)<br>    	at PathImplicits$RichPath.read(Solution.scala:14)<br>    	at PathImplicits$RichPath.append(Solution.scala:15)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:9)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 10 s, completed Apr 18, 2016 2:41:07 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211340,Thomas Baim,tbaim@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 8:07 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211332,Liang Ting Lin,llin@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 5:14 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211300,John Geenty,jgeenty@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:40 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211287,Jay McMahon,jdmcmahon@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211348,Ajibola Famuyibo,afamuyibo@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 1:02 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211296,Joshua Canuel,jcanuel@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 3:07 PM","Thursday, April 21, 2016, 7:05 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211377,Craig Fan,clfan@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 1:44 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211357,Emily Yu,ewyu@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:01 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211338,Richard Pompeo,rdpompeo@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:36 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211294,Lauren Bornfeld,lbornfeld@umass.edu,"No submission
Graded
Extension granted until: Thursday, April 21, 2016, 8:45 AM
",0.00,100.00,Yes,"Monday, April 11, 2016, 3:01 PM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211384,Kendall Bell,kbell@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:45 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211298,Tyler McMaster,tmcmaster@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:05 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211371,Cory Knopp,cknopp@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:18 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211280,Jake Stephens,jrstephens@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 8:41 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211304,William Warner,wwarner@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 12:06 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211302,Ivan Polipas,ipolipas@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 1:04 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211434,Arnold Joseph,arnoldjoseph@umass.edu,"Submitted for grading
18 hours 55 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 7:55 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211363,Frick Shao,fshao@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211409,Luke Fateiger,lfateiger@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:44 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211286,Noah Brayer,nbrayer@umass.edu,"No submission
15 hours 5 mins late
Graded
",0.00,100.00,Yes,"Tuesday, April 12, 2016, 4:05 PM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211423,Andrew Mulcahy,ammulcahy@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:32 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211370,Wenbo Xie,wenboxie@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 2:20 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211407,Michael Amirault,mcamirault@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 7:59 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211410,Aarsh Patel,aarshpatel@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 1:05 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211411,Jonathan Kovach,jekovach@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:38 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211393,Makenzie Schwartz,mwschwartz@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 3:07 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211347,Jingjun Chen,jingjunchen@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:17 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211373,Samuel McGuire,smcguire@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 5:23 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211335,Youngkyun Lee,youngkyunlee@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 4:44 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211336,Naman Shenoy,nshenoy@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 12:24 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211364,Nicholas Minichiello,nminichiello@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 7:02 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211401,Alan Van Dijk,avandijk@umass.edu,"Submitted for grading
8 hours 41 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 9:41 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211322,Zachary Tandara Kuhns,ztandarakuhn@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 11:18 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211279,YangJunqing Qiao,jqiao@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 9:09 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211389,Zachary Tousignant,ztousignant@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 11:53 PM","Thursday, April 21, 2016, 7:05 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211342,Ian McGeoch,imcgeoch@isenberg.umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:43 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211406,Luis Quinones-Diaz,lmquinones@umass.edu,"Submitted for grading
19 hours 58 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 8:58 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211383,Hang Liu,hangliu@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 10:21 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211321,Ryan Ward,rward@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 6:53 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211278,Misha Kanai,mkanai@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:24 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211399,Henrique DeAguiar,hdeaguiar@umass.edu,"Submitted for grading
21 hours 23 mins late
Graded
",50.00,100.00,Yes,"Tuesday, April 12, 2016, 10:23 PM","Monday, April 18, 2016, 10:52 AM","Percentage: 50%<br>Points: 60 / 120<br><br>Details:<br><br>We can add days to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (367ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 2.days<br>    [error]                                                 ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 7 s, completed Apr 18, 2016 2:43:05 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can add days to a date written using our date DSL failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (372ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = (31 jan 2016) + 2.days<br>    [error]                                     ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:43:04 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (310ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value months is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 3.months<br>    [error]                                                 ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 7 s, completed Apr 18, 2016 2:43:05 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (383ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value years is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 5.years<br>    [error]                                                 ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 7 s, completed Apr 18, 2016 2:43:07 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .read method to read files failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (409ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:10: value read is not a member of java.nio.file.Path<br>    [error]         assert(p.read() == contents)<br>    [error]                  ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 8 s, completed Apr 18, 2016 2:43:10 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .write method to create files failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (340ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.lang.AssertionError: assertion failed<br>    java.lang.AssertionError: assertion failed<br>    	at scala.Predef$.assert(Predef.scala:151)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:10)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 10 s, completed Apr 18, 2016 2:43:10 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .append method to append data to the end of a file passed (10/10 points)"
Participant 5211290,Rian Shambaugh,rshambaugh@umass.edu,"No submission
6 days 9 hours late
Graded
",0.00,100.00,Yes,"Monday, April 18, 2016, 10:52 AM","Monday, April 18, 2016, 10:52 AM",Not graded
Participant 5211303,Ivan Bunin,ibunin@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:14 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211306,Ethan Johnson,ethanjohnson@umass.edu,"Submitted for grading
22 hours 56 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 11:56 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211315,Jacob Brown,jwbrown@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 12:16 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211299,John Sweeney,johnsweeney@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 9:16 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211325,Maxim Berezin,mberezin@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 5:18 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211341,Colby Leclerc,cleclerc@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:41 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211283,Nicholas Galang,ngalang@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 3:58 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211311,David Pujol,dpujol@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 11:52 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211355,Huy Nguyen,huyqnguyen@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 6:42 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211432,Jane Tangen,jtangen@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:09 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211369,Weihai Chen,weihaichen@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:22 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211337,Patrick Robb,probb@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:10 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211391,Gargi Sapre,gsapre@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 8:32 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211386,Jesse Bartola,jbartola@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Thursday, April 7, 2016, 4:34 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211358,Andrew Eshak,aeshak@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:28 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211379,Andrew Sharp,awsharp@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 10:49 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211313,Alexander Caswell,ajcaswell@umass.edu,"Submitted for grading
13 hours 21 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 2:21 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211359,Matthew Leblanc,mkleblanc@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 2:36 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211398,Cyrus Dastangoo,cdastangoo@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:57 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211305,Colin Stern,cstern@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 12:09 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211292,Samuel Silverman,sssilverman@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 10:31 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211435,Naazish Sheikh,naazishsheik@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:13 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211318,Huan Wang,huanwang@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 8:09 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211378,Miles Black,milesblack@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:09 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211276,Harsh Poddar,hpoddar@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 1:03 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211291,Caroline Kim,kyuminkim@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 4:45 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211360,Ellery Buntel,ebuntel@umass.edu,"Submitted for grading
15 hours 19 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 4:19 PM","Thursday, April 21, 2016, 7:08 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211429,Che-Wei Lin,cheweilin@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 11:20 PM","Wednesday, April 27, 2016, 10:32 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211285,Robin Wu,rwu@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 6:35 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211310,Arthur Normand,anormand@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 6:34 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211368,Andy Mei,amei@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 1:00 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211385,Joey Canning,jcanning@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 10:09 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211345,Eben Sherwood,esherwood@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:49 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211308,Andrew Wang,andwang@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 4:59 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211380,Cole Reilly,careilly@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 4:57 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211324,Roy Jackman,royjackman@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 4:31 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211307,Brett Kreindler,bkreindler@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 2:42 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211353,Michael Schmittlein,mschmittlein@umass.edu,"Submitted for grading
Graded
",67.00,100.00,Yes,"Monday, April 11, 2016, 7:59 PM","Monday, April 18, 2016, 10:52 AM","Percentage: 67%<br>Points: 80 / 120<br><br>Details:<br><br>We can add days to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (349ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 2.days<br>    [error]                                                 ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:41:42 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can add days to a date written using our date DSL failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (350ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = (31 jan 2016) + 2.days<br>    [error]                                     ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:41:41 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (360ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value months is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 3.months<br>    [error]                                                 ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:41:42 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (398ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value years is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 5.years<br>    [error]                                                 ^<br>    [error] one error found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:41:41 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)"
Participant 5211350,Dipen Patel,dipenpatel@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 9:06 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211382,Garrett Coffman,gcoffman@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:34 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211301,Katherine Mayo,kmayo@umass.edu,"Submitted for grading
Graded
",92.00,100.00,Yes,"Monday, April 11, 2016, 5:15 PM","Monday, April 18, 2016, 10:52 AM","Percentage: 92%<br>Points: 110 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (321ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.lang.AssertionError: assertion failed<br>    java.lang.AssertionError: assertion failed<br>    	at scala.Predef$.assert(Predef.scala:151)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:11)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 9 s, completed Apr 18, 2016 2:40:46 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211397,Andrew Hatini,ahatini@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:57 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211394,Kyle Vedder,kvedder@umass.edu,"Submitted for grading
Graded
",92.00,100.00,Yes,"Sunday, April 10, 2016, 3:55 PM","Monday, April 18, 2016, 10:52 AM","Percentage: 92%<br>Points: 110 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (373ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.nio.file.NoSuchFileException: test.txt<br>    java.nio.file.NoSuchFileException: test.txt<br>    	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)<br>    	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)<br>    	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)<br>    	at java.nio.file.Files.newOutputStream(Files.java:216)<br>    	at java.nio.file.Files.write(Files.java:3292)<br>    	at PathImplicits$RichPath.append(soln.scala:15)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:9)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 11 s, completed Apr 18, 2016 2:42:16 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211392,Itamar Levy-Or,ilevyor@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 7:37 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211365,Matthew Hickey,matthewhicke@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 12:43 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211421,Nishant Nawathe,nnawathe@umass.edu,"Submitted for grading
Graded
",92.00,100.00,Yes,"Monday, April 11, 2016, 12:44 PM","Monday, April 18, 2016, 10:52 AM","Percentage: 92%<br>Points: 110 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (343ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.io.FileNotFoundException: test.txt (No such file or directory)<br>    java.io.FileNotFoundException: test.txt (No such file or directory)<br>    	at java.io.FileInputStream.open0(Native Method)<br>    	at java.io.FileInputStream.open(FileInputStream.java:195)<br>    	at java.io.FileInputStream.<init>(FileInputStream.java:138)<br>    	at scala.io.Source$.fromFile(Source.scala:91)<br>    	at scala.io.Source$.fromFile(Source.scala:76)<br>    	at scala.io.Source$.fromFile(Source.scala:54)<br>    	at PathImplicits$RichPath.read(PathImplicits.scala:15)<br>    	at PathImplicits$RichPath.append(PathImplicits.scala:16)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:9)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 10 s, completed Apr 18, 2016 2:43:12 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211408,Shelton Cai,szcai@umass.edu,"Submitted for grading
3 days 20 hours late
Graded
",83.00,100.00,Yes,"Friday, April 15, 2016, 9:59 PM","Monday, April 18, 2016, 10:52 AM","This assignment was 4 day(s) late. You've now used 4 late days.Percentage: 83%<br>Points: 100 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (379ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.lang.AssertionError: assertion failed<br>    java.lang.AssertionError: assertion failed<br>    	at scala.Predef$.assert(Predef.scala:151)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:10)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 10 s, completed Apr 18, 2016 2:42:56 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (385ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.nio.file.NoSuchFileException: test.txt<br>    java.nio.file.NoSuchFileException: test.txt<br>    	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)<br>    	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)<br>    	at java.nio.file.Files.newByteChannel(Files.java:361)<br>    	at java.nio.file.Files.newByteChannel(Files.java:407)<br>    	at java.nio.file.Files.readAllBytes(Files.java:3152)<br>    	at PathImplicits$IO.read(Solution.scala:17)<br>    	at PathImplicits$IO.append(Solution.scala:18)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:9)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 10 s, completed Apr 18, 2016 2:42:55 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211323,Emily Goroza,egoroza@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:27 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211344,David Chen,jihongchen@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 6:36 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211333,Jared Holzman,jholzman@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 4:46 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211295,Bhishma Pant,bpant@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 8:04 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211417,James Curry,jcurry@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 10:20 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211422,Sean Barker,sabarker@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 8:40 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211293,Varan Culanathan,vculanathan@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 8:16 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211403,Valentin Degtyarev,vdegtyarev@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 12:13 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211331,Johnny Wei,jwei@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:45 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211428,Gahyun Kim,gahyunkim@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 2:18 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211433,Peter Delmastro,pdelmastro@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Saturday, April 9, 2016, 11:25 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211316,Zachary Kiihne,zkiihne@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 10:39 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211356,Siddarth Patel,siddarthpate@umass.edu,"Submitted for grading
Graded
",92.00,100.00,Yes,"Monday, April 11, 2016, 12:53 PM","Monday, April 18, 2016, 10:52 AM","Percentage: 92%<br>Points: 110 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (351ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [info] Running GradingMain <br>    [error] (run-main-0) java.nio.file.NoSuchFileException: test.txt<br>    java.nio.file.NoSuchFileException: test.txt<br>    	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)<br>    	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)<br>    	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)<br>    	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)<br>    	at java.nio.file.Files.newOutputStream(Files.java:216)<br>    	at java.nio.file.Files.write(Files.java:3292)<br>    	at PathImplicits$RichPath.append(Solution.scala:18)<br>    	at GradingMain$.delayedEndpoint$GradingMain$1(GradingMain.scala:9)<br>    	at GradingMain$delayedInit$body.apply(GradingMain.scala:1)<br>    	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)<br>    	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.App$$anonfun$main$1.apply(App.scala:76)<br>    	at scala.collection.immutable.List.foreach(List.scala:381)<br>    	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)<br>    	at scala.App$class.main(App.scala:76)<br>    	at GradingMain$.main(GradingMain.scala:1)<br>    	at GradingMain.main(GradingMain.scala)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    	at java.lang.reflect.Method.invoke(Method.java:498)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    java.lang.RuntimeException: Nonzero exit code: 1<br>    	at scala.sys.package$.error(package.scala:27)<br>    [trace] Stack trace suppressed: run last compile:run for the full output.<br>    [error] (compile:run) Nonzero exit code: 1<br>    [error] Total time: 10 s, completed Apr 18, 2016 2:42:14 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211277,Barry Greengus,bgreengus@umass.edu,"Submitted for grading
2 days 2 hours late
Graded
",90.0,100.00,Yes,"Thursday, April 14, 2016, 3:41 AM","Monday, April 18, 2016, 10:52 AM","This assignment was 3 day(s) late. You had already used four late days. Therefore, the grade has been reduced by 10 * 1 percentage points.Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)"
Participant 5211319,Zitao Wang,zitaowang@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 12:24 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211289,Nicholas Achin,nicholasachi@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Sunday, April 10, 2016, 11:43 PM","Thursday, April 21, 2016, 7:12 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211281,Kevin Silva,kevinsilva@umass.edu,"Submitted for grading
20 hours 32 mins late
Graded
",100.00,100.00,Yes,"Tuesday, April 12, 2016, 9:32 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211367,Maxim Sukharev-Chuyan,maximsc@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 10:10 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211425,Gregoire Robinson,gregoirerobi@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 11:26 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211390,Cerek Hillen,chillen@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Thursday, April 7, 2016, 4:08 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211351,Ashley Tapulado,atapulad@umass.edu,"Submitted for grading
1 day 18 hours late
Graded
",8.00,100.00,Yes,"Wednesday, April 13, 2016, 7:27 PM","Monday, April 18, 2016, 10:52 AM","This assignment was 2 day(s) late. You've now used 4 late days.Percentage: 8%<br>Points: 10 / 120<br><br>Details:<br><br>We can add days to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (369ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 2.days<br>    [error]                                                 ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can add days to a date written using our date DSL failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (338ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value jan is not a member of Int<br>    [error]       val date1 = (31 jan 2016) + 2.days<br>    [error]                       ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value days is not a member of Int<br>    [error]       val date1 = (31 jan 2016) + 2.days<br>    [error]                                     ^<br>    [error] three errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>It would be convenient if we could build a path by using / to separate strings failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (373ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value PathImplicits<br>    [error]       import PathImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value / is not a member of String<br>    [error]       assert(""usr"" / ""bin"" / ""scala"" == Paths.get(""usr/bin/scala""))<br>    [error]                    ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:45 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can add months to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (380ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value months is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 3.months<br>    [error]                                                 ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (402ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value jan is not a member of Int<br>    [error]       assert(15.jan == LocalDate.of(2016, 1, 15))<br>    [error]                 ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:7: value feb is not a member of Int<br>    [error]       assert(29.feb == LocalDate.of(2016, 2, 29))<br>    [error]                 ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:8: value mar is not a member of Int<br>    [error]       assert(2.mar == LocalDate.of(2016, 3, 2))<br>    [error]                ^<br>    [error] four errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:50:07 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>The / operator should be able to put two paths together too failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (317ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value PathImplicits<br>    [error]       import PathImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value / is not a member of String<br>    [error]       val p1 = ""usr"" / ""local""<br>    [error]                      ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:7: value / is not a member of String<br>    [error]       val p2 = ""bin"" / ""scala""<br>    [error]                      ^<br>    [error] three errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can write dates in other years like this failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (374ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value feb is not a member of Int<br>    [error]       val date1 = 28 feb 2015<br>    [error]                      ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:8: value oct is not a member of Int<br>    [error]       val date2 = 15 oct 1989<br>    [error]                      ^<br>    [error] three errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>We can add years to a date failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (392ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value DateImplicits<br>    [error]       import DateImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:6: value years is not a member of Int<br>    [error]       val date1 = LocalDate.of(2016, 1, 31) + 5.years<br>    [error]                                                 ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:43 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .read method to read files failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (363ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value PathImplicits<br>    [error]       import PathImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:10: value read is not a member of java.nio.file.Path<br>    [error]         assert(p.read() == contents)<br>    [error]                  ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .write method to create files failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (399ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value PathImplicits<br>    [error]       import PathImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:9: value write is not a member of java.nio.file.Path<br>    [error]         p.write(contents)<br>    [error]           ^<br>    [error] two errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br><br>Paths should have a .append method to append data to the end of a file failed (0/10 points)<br>Standard output:    [info] Loading global plugins from /home/student/.sbt/0.13/plugins<br>    [info] Set current project to hw (in build file:/home/student/hw/)<br>    [info] Updating {file:/home/student/hw/}hw...<br>    [info] Resolving org.scala-lang#scala-library;2.11.7 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving edu.umass.cs#compsci220_2.11;1.0.1 ...<br>    [A
[2K[info] Resolving org.scalatest#scalatest_2.11;2.2.6 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-reflect;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...<br>    [A
[2K[info] Resolving org.scala-lang#scala-compiler;2.11.7 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.4 ...<br>    [A
[2K[info] Resolving jline#jline;2.12.1 ...<br>    [info] downloading https://dl.bintray.com/plasma-umass/maven/edu/umass/cs/compsci220_2.11/1.0.1/compsci220_2.11-1.0.1.jar ...<br>    [info] 	[SUCCESSFUL ] edu.umass.cs#compsci220_2.11;1.0.1!compsci220_2.11.jar (425ms)<br>    [info] Done updating.<br>    [info] Compiling 2 Scala sources to /home/student/hw/target/scala-2.11/classes...<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:5: not found: value PathImplicits<br>    [error]       import PathImplicits._<br>    [error]              ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:9: value append is not a member of java.nio.file.Path<br>    [error]         p.append(""First line\n"")<br>    [error]           ^<br>    [error] /home/student/hw/src/main/scala/GradingMain.scala:10: value append is not a member of java.nio.file.Path<br>    [error]         p.append(""Second line\n"")<br>    [error]           ^<br>    [error] three errors found<br>    [error] (compile:compileIncremental) Compilation failed<br>    [error] Total time: 6 s, completed Apr 18, 2016 2:40:44 PM<br><br>Standard error:<br><br>    <br><br>Exit code: 1<br>"
Participant 5211424,Sanford Cluett,scluett@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Monday, April 11, 2016, 6:36 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211404,Siyu Peng,siyupeng@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 10:44 AM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
Participant 5211275,Jaeseong Lee,jaeseonglee@umass.edu,"Submitted for grading
Graded
",100.00,100.00,Yes,"Friday, April 8, 2016, 12:00 PM","Monday, April 18, 2016, 10:52 AM",Percentage: 100%<br>Points: 120 / 120<br><br>Details:<br><br>We can add days to a date passed (10/10 points)<br>We can add days to a date written using our date DSL passed (10/10 points)<br>It would be convenient if we could build a path by using / to separate strings passed (10/10 points)<br>We can add months to a date passed (10/10 points)<br>Does the program compile? passed (10/10 points)<br>This is a convenient way of writing a date in the current year passed (10/10 points)<br>The / operator should be able to put two paths together too passed (10/10 points)<br>We can write dates in other years like this passed (10/10 points)<br>We can add years to a date passed (10/10 points)<br>Paths should have a .read method to read files passed (10/10 points)<br>Paths should have a .write method to create files passed (10/10 points)<br>Paths should have a .append method to append data to the end of a file passed (10/10 points)
